/*
 * Modern UserProfileModal CSS - 2025
 * With support for responsive design, dark mode, animations, and RTL
 */

.profileModal {
  --card-radius: 1.25rem;
  --inner-spacing: 1.5rem;
  --gap-small: 0.5rem;
  --gap-medium: 1rem;
  --gap-large: 1.5rem;
  --content-max-width: 900px;
  --content-padding: 1.5rem;

  max-width: 100vw !important;
  margin: 0 !important;
  padding: 0 !important;
  border-radius: var(--card-radius) !important;
  overflow: hidden !important;
  background-color: transparent !important;
}

.profileWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: var(--bg-light);
  overflow: hidden;
  transition: background-color 0.3s ease;
  position: relative;
}

:global(.dark) .profileWrapper {
  background-color: var(--bg-dark);
}

/* Close button */
.closeButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  background-color: var(--bg-light);
  color: var(--text-dark);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 100;
  transition: all 0.2s ease;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.closeButton:hover {
  transform: scale(1.1);
  background-color: var(--neutral-200);
}

:global(.dark) .closeButton {
  background-color: var(--neutral-800);
  color: var(--text-light);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.4);
}

:global([dir="rtl"]) .closeButton {
  right: auto;
  left: 1rem;
}

/* Request notification */
.requestNotification {
  position: absolute;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
  width: 90%;
  max-width: 500px;
  background-color: var(--white);
  border-radius: var(--card-radius);
  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.1);
  padding: 1rem;
  animation: slideDown 0.3s var(--ease-out);
  border-left: 4px solid var(--warning);
}

:global(.dark) .requestNotification {
  background-color: var(--neutral-800);
  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.3);
}

:global([dir="rtl"]) .requestNotification {
  border-left: none;
  border-right: 4px solid var(--warning);
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translate(-50%, -20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

.notificationContent {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

:global([dir="rtl"]) .notificationContent {
  flex-direction: row-reverse;
}

.notificationIcon {
  color: var(--warning);
  font-size: 1.25rem;
  flex-shrink: 0;
}

.notificationText {
  font-size: 0.875rem;
  color: var(--text-dark);
  margin: 0;
  flex-grow: 1;
}

:global(.dark) .notificationText {
  color: var(--text-light);
}

.notificationActions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

:global([dir="rtl"]) .notificationActions {
  justify-content: flex-start;
}

.approveBtn,
.rejectBtn {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
  font-size: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.approveBtn {
  background-color: var(--success);
  color: white;
  border: none;
}

.approveBtn:hover:not(:disabled) {
  background-color: var(--success-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--success-rgb), 0.2);
}

.rejectBtn {
  background-color: transparent;
  color: var(--danger);
  border: 1px solid var(--danger);
}

.rejectBtn:hover:not(:disabled) {
  background-color: var(--danger);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--danger-rgb), 0.2);
}

/* Main content layout */
.contentLayout {
  display: flex;
  width: 100%;
  min-height: 600px;
  max-height: 85vh;
}

.leftColumn {
  flex: 5;
  display: flex;
  flex-direction: column;
  background-color: var(--neutral-50);
  overflow: hidden;
  min-width: 0;
  max-width: 550px;
  border-right: 1px solid var(--border-color);
}

:global(.dark) .leftColumn {
  background-color: var(--neutral-900);
  border-right-color: var(--neutral-800);
}

:global([dir="rtl"]) .leftColumn {
  border-right: none;
  border-left: 1px solid var(--border-color);
}

:global(.dark[dir="rtl"]) .leftColumn {
  border-left-color: var(--neutral-800);
}

.rightColumn {
  flex: 7;
  display: flex;
  flex-direction: column;
  background-color: var(--bg-light);
  overflow-y: auto;
  overflow-x: hidden;
  min-width: 0;
  scrollbar-width: thin;
}

:global(.dark) .rightColumn {
  background-color: var(--bg-dark);
}

/* Mobile header - visible on small screens */
.mobileHeader {
  display: none;
  padding: 1rem;
  background-color: var(--neutral-50);
  border-bottom: 1px solid var(--border-color);
}

:global(.dark) .mobileHeader {
  background-color: var(--neutral-900);
  border-bottom-color: var(--neutral-800);
}

.userInfoMobile {
  display: flex;
  flex-direction: column;
}

.locationBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  color: var(--text-light);
  font-size: 0.875rem;
  margin-top: 0.25rem;
}

.onlineBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  color: var(--success);
  font-size: 0.75rem;
  font-weight: 500;
  background-color: var(--success-subtle);
  padding: 0.25rem 0.5rem;
  border-radius: 1rem;
  width: fit-content;
  margin-top: 0.5rem;
}

.pulseStatus {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background-color: var(--success);
  position: relative;
}

.pulseStatus::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 50%;
  background-color: var(--success);
  animation: pulse 1.5s infinite ease-out;
}

@keyframes pulse {
  0% { transform: scale(1); opacity: 1; }
  100% { transform: scale(2.5); opacity: 0; }
}

/* Stories row */
.storiesRow {
  display: flex;
  align-items: center;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid var(--border-color);
  background-color: var(--bg-light);
  cursor: pointer;
  transition: background-color 0.2s ease;
}

:global(.dark) .storiesRow {
  background-color: var(--bg-dark);
  border-bottom-color: var(--neutral-800);
}

.storiesRow:hover {
  background-color: var(--hover-overlay);
}

.viewStoriesText {
  font-size: 0.875rem;
  color: var(--text-dark);
  margin-left: 0.75rem;
  font-weight: 500;
}

:global(.dark) .viewStoriesText {
  color: var(--text-light);
}

:global([dir="rtl"]) .viewStoriesText {
  margin-left: 0;
  margin-right: 0.75rem;
}

/* Photo Gallery */
.photoGallery {
  flex: 1;
  position: relative;
  background-color: var(--neutral-900);
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.galleryInner {
  flex: 1;
  position: relative;
  overflow: hidden;
}

.photoSlide {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 0.3s ease, transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.activeSlide {
  opacity: 1;
  z-index: 2;
}

.photoWrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.photoImage {
  width: 100%;
  height: 100%;
  object-fit: contain;
  max-height: 70vh;
}

.privatePhoto {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: linear-gradient(45deg, #1e293b, #0f172a);
  color: white;
  padding: 2rem;
  text-align: center;
}

.lockIconWrapper {
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
}

.lockIcon {
  font-size: 1.5rem;
  color: rgba(255, 255, 255, 0.8);
}

.privatePhotoText {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 1.5rem;
  max-width: 240px;
}

.statusBadge {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.75rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

.pendingBadge {
  background-color: var(--warning-subtle);
  color: var(--warning);
}

.rejectedBadge {
  background-color: var(--danger-subtle);
  color: var(--danger);
}

.requestAccessBtn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.625rem 1.25rem;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: 2rem;
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.requestAccessBtn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 0.5rem 1rem rgba(var(--primary-rgb), 0.3);
}

.navBtn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.3);
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 5;
  transition: all 0.2s ease;
}

.navBtn:hover:not(:disabled) {
  background-color: rgba(0, 0, 0, 0.5);
  transform: translateY(-50%) scale(1.1);
}

.navBtn:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

.prevBtn {
  left: 1rem;
}

.nextBtn {
  right: 1rem;
}

:global([dir="rtl"]) .prevBtn {
  left: auto;
  right: 1rem;
}

:global([dir="rtl"]) .nextBtn {
  right: auto;
  left: 1rem;
}

.rtlNav svg {
  transform: scaleX(-1);
}

.photoIndicators {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem;
  z-index: 5;
  background-color: rgba(0, 0, 0, 0.5);
}

.indicator {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.3);
  border: none;
  padding: 0;
  cursor: pointer;
  transition: all 0.2s ease;
}

.activeIndicator,
.indicator:hover {
  background-color: white;
}

.noPhotosContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--neutral-100);
  color: var(--text-light);
  text-align: center;
  padding: 2rem;
}

:global(.dark) .noPhotosContainer {
  background-color: var(--neutral-800);
}

/* Action buttons */
.actionButtons {
  display: flex;
  gap: 0.75rem;
  padding: 0.75rem 1.25rem;
  border-bottom: 1px solid var(--border-color);
  background-color: var(--bg-light);
}

:global(.dark) .actionButtons {
  background-color: var(--bg-dark);
  border-bottom-color: var(--neutral-800);
}

.mobileActions {
  display: none;
  position: sticky;
  bottom: 0;
  background-color: var(--bg-light);
  border-top: 1px solid var(--border-color);
  border-bottom: none;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
  z-index: 5;
}

:global(.dark) .mobileActions {
  background-color: var(--bg-dark);
  border-top-color: var(--neutral-800);
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);
}

.actionBtn {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.625rem 1.25rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.likeBtn {
  background-color: var(--heart-subtle);
  color: var(--heart-color);
  border: 1px solid var(--heart-color);
}

.likeBtn:hover:not(:disabled) {
  background-color: var(--heart-color);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--danger-rgb), 0.2);
}

.likedBtn {
  background-color: var(--heart-color);
  color: white;
  border: 1px solid var(--heart-color);
}

.likedBtn:hover:not(:disabled) {
  opacity: 0.9;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--danger-rgb), 0.2);
}

.messageBtn {
  background-color: var(--message-subtle);
  color: var(--message-color);
  border: 1px solid var(--message-color);
}

.messageBtn:hover:not(:disabled) {
  background-color: var(--message-color);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--secondary-rgb), 0.2);
}

.moreActions {
  position: relative;
}

.moreBtn {
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--neutral-100);
  color: var(--text-medium);
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

:global(.dark) .moreBtn {
  background-color: var(--neutral-800);
  color: var(--text-light);
  border-color: var(--neutral-700);
}

.moreBtn:hover {
  background-color: var(--neutral-200);
}

:global(.dark) .moreBtn:hover {
  background-color: var(--neutral-700);
}

.actionsDropdown {
  position: absolute;
  top: calc(100% + 0.5rem);
  right: 0;
  width: 200px;
  background-color: var(--white);
  border-radius: 0.5rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  z-index: 10;
  animation: fadeIn 0.2s ease;
}

:global(.dark) .actionsDropdown {
  background-color: var(--neutral-800);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
}

:global([dir="rtl"]) .actionsDropdown {
  right: auto;
  left: 0;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.dropdownItem {
  width: 100%;
  padding: 0.75rem 1rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  background: none;
  border: none;
  text-align: left;
  color: var(--text-medium);
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

:global([dir="rtl"]) .dropdownItem {
  text-align: right;
  flex-direction: row-reverse;
}

.dropdownItem:hover {
  background-color: var(--hover-overlay);
  color: var(--text-dark);
}

:global(.dark) .dropdownItem {
  color: var(--text-light);
}

:global(.dark) .dropdownItem:hover {
  background-color: var(--neutral-700);
}

/* User header */
.userHeader {
  padding: 1.25rem 1.5rem;
  background-color: var(--white);
  border-bottom: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

:global(.dark) .userHeader {
  background-color: var(--neutral-800);
  border-bottom-color: var(--neutral-700);
}

.userInfo {
  display: flex;
  flex-direction: column;
}

.nameRow {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.userName {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0;
  color: var(--text-dark);
}

:global(.dark) .userName {
  color: var(--text-light);
}

.premiumBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.25rem 0.625rem;
  border-radius: 1rem;
}

.locationInfo {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-top: 0.375rem;
}

.locationBadge,
.onlineStatus {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  color: var(--text-light);
  font-size: 0.875rem;
}

:global(.dark) .locationBadge,
:global(.dark) .onlineStatus {
  color: var(--text-medium);
}

.locationIcon {
  color: var(--primary);
  font-size: 0.875rem;
}

.isOnline {
  color: var(--success);
}

.userTimeline {
  display: flex;
  gap: 1.5rem;
  border-top: 1px solid var(--border-color);
  padding-top: 0.75rem;
  margin-top: 0.5rem;
}

:global(.dark) .userTimeline {
  border-top-color: var(--neutral-700);
}

.timelineItem {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--text-light);
  font-size: 0.75rem;
}

:global(.dark) .timelineItem {
  color: var(--text-medium);
}

.timelineIcon {
  color: var(--primary);
}

/* User details */
.userDetails {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.detailCard {
  background-color: var(--white);
  border-radius: 0.75rem;
  padding: 1.25rem;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
  transition: all 0.3s ease;
}

:global(.dark) .detailCard {
  background-color: var(--neutral-800);
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.2);
}

.detailCard:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
}

:global(.dark) .detailCard:hover {
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);
}

.cardTitle {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-dark);
  margin: 0 0 0.75rem 0;
  position: relative;
  display: inline-block;
}

:global(.dark) .cardTitle {
  color: var(--text-light);
}

.cardTitle::after {
  content: '';
  position: absolute;
  bottom: -0.375rem;
  left: 0;
  width: 2rem;
  height: 0.1875rem;
  background: linear-gradient(to right, var(--primary), var(--primary-light));
  border-radius: 0.125rem;
}

:global([dir="rtl"]) .cardTitle::after {
  left: auto;
  right: 0;
}

.bioText {
  color: var(--text-medium);
  line-height: 1.6;
  margin: 0;
  font-size: 0.9375rem;
}

:global(.dark) .bioText {
  color: var(--text-light);
}

.infoRow {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

.infoRow:last-child {
  margin-bottom: 0;
}

.infoLabel {
  font-size: 0.9375rem;
  font-weight: 500;
  color: var(--text-medium);
  margin: 0;
  min-width: 6.25rem;
}

:global(.dark) .infoLabel {
  color: var(--text-light);
}

.tagSection {
  margin-bottom: 1.25rem;
}

.tagSection:last-child {
  margin-bottom: 0;
}

.tagsGroup {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
  font-size: 0.75rem;
  font-weight: 500;
  transition: all 0.2s ease;
}

.tag:hover {
  transform: translateY(-2px);
}

.identityTag {
  background-color: var(--primary-subtle);
  color: var(--primary);
}

.statusTag {
  background-color: var(--secondary-subtle);
  color: var(--secondary);
}

.lookingForTag {
  background-color: var(--warning-subtle);
  color: var(--warning);
}

.intoTag {
  background-color: var(--success-subtle);
  color: var(--success);
}

.turnOnTag {
  background-color: var(--danger-subtle);
  color: var(--danger);
}

.interestTag {
  background-color: var(--neutral-100);
  color: var(--text-medium);
}

:global(.dark) .interestTag {
  background-color: var(--neutral-700);
  color: var(--text-light);
}

.commonInterestTag {
  background-color: var(--success-subtle);
  color: var(--success);
}

.checkIcon {
  font-size: 0.6875rem;
}

.interestsHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.commonBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  background-color: var(--success-subtle);
  color: var(--success);
  font-size: 0.75rem;
  font-weight: 500;
  padding: 0.25rem 0.5rem;
  border-radius: 1rem;
}

.interestsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.showMoreBtn {
  color: var(--primary);
  background: none;
  border: none;
  font-size: 0.875rem;
  font-weight: 500;
  padding: 0.375rem 0.75rem;
  cursor: pointer;
  transition: all 0.2s ease;
  align-self: flex-start;
  display: flex;
  align-items: center;
  gap: 0.375rem;
}

.showMoreBtn:hover {
  background-color: var(--primary-subtle);
  border-radius: 0.25rem;
}

/* Compatibility styles */
.compatibilityLayout {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
}

.compatibilityMeter {
  flex: 1;
  min-width: 140px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.meterCircle {
  position: relative;
  width: 130px;
  height: 130px;
}

.meterCircle svg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

:global([dir="rtl"]) .meterCircle svg {
  transform: rotate(90deg) scaleX(-1);
}

.meterBg {
  fill: none;
  stroke: var(--neutral-200);
  stroke-width: 8;
}

:global(.dark) .meterBg {
  stroke: var(--neutral-700);
}

.meterFill {
  fill: none;
  stroke: url(#compatibility-gradient);
  stroke-width: 8;
  stroke-linecap: round;
  transition: stroke-dashoffset 1.5s ease-out;
}

.meterValue {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary);
}

:global(.dark) .meterValue {
  color: var(--primary-light);
}

.compatibilityFactors {
  flex: 2;
  min-width: 200px;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.factorRow {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.factorInfo {
  display: flex;
  justify-content: space-between;
}

.factorName {
  font-size: 0.875rem;
  color: var(--text-medium);
}

:global(.dark) .factorName {
  color: var(--text-light);
}

.factorValue {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-dark);
}

:global(.dark) .factorValue {
  color: var(--text-light);
}

.factorBar {
  height: 0.5rem;
  background-color: var(--neutral-200);
  border-radius: 0.25rem;
  overflow: hidden;
}

:global(.dark) .factorBar {
  background-color: var(--neutral-700);
}

.factorProgress {
  height: 100%;
  background: linear-gradient(to right, var(--primary), var(--primary-light));
  border-radius: 0.25rem;
  transition: width 1s ease-out;
}

:global([dir="rtl"]) .factorProgress {
  background: linear-gradient(to left, var(--primary), var(--primary-light));
}

/* Spinner */
.spinner {
  animation: spin 1.2s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

:global([dir="rtl"]) .spinner {
  animation-direction: reverse;
}

/* Chat overlay */
.chatOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(5px);
  z-index: 1000;
  animation: fadeIn 0.3s ease;
}

/* Loading state */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  text-align: center;
}

.loadingSpinner {
  width: 50px;
  height: 50px;
  border: 3px solid var(--neutral-200);
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

:global(.dark) .loadingSpinner {
  border-color: var(--neutral-700);
  border-top-color: var(--primary);
}

/* Error and Not found states */
.errorContainer,
.notFoundContainer {
  padding: 2rem;
  text-align: center;
  max-width: 400px;
  margin: 0 auto;
}

.errorTitle,
.notFoundTitle {
  color: var(--danger);
  margin-bottom: 1rem;
}

.errorText,
.notFoundText {
  color: var(--text-medium);
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

:global(.dark) .errorText,
:global(.dark) .notFoundText {
  color: var(--text-light);
}

/* Responsive styles */
@media (max-width: 992px) {
  .contentLayout {
    flex-direction: column;
    max-height: none;
  }

  .leftColumn,
  .rightColumn {
    width: 100%;
    max-width: none;
    flex: none;
  }

  .leftColumn {
    border-right: none;
    border-bottom: 1px solid var(--border-color);
  }

  :global([dir="rtl"]) .leftColumn {
    border-left: none;
  }
}

@media (max-width: 768px) {
  .mobileHeader {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }

  .userHeader {
    display: none;
  }

  .mobileActions {
    display: flex;
  }

  .actionButtons:not(.mobileActions) {
    display: none;
  }

  .compatibilityLayout {
    flex-direction: column;
  }

  .compatibilityMeter {
    margin: 0 auto;
  }
}

@media (max-width: 576px) {
  .closeButton {
    top: 0.75rem;
    right: 0.75rem;
    width: 2rem;
    height: 2rem;
  }

  :global([dir="rtl"]) .closeButton {
    right: auto;
    left: 0.75rem;
  }

  .userDetails {
    padding: 1rem;
    gap: 1rem;
  }

  .detailCard {
    padding: 1rem;
  }

  .requestNotification {
    width: 95%;
    padding: 0.75rem;
  }

  .navBtn {
    width: 2.5rem;
    height: 2.5rem;
  }

  .prevBtn {
    left: 0.5rem;
  }

  .nextBtn {
    right: 0.5rem;
  }

  :global([dir="rtl"]) .prevBtn {
    left: auto;
    right: 0.5rem;
  }

  :global([dir="rtl"]) .nextBtn {
    right: auto;
    left: 0.5rem;
  }
}

/* Support for high contrast mode */
@media (forced-colors: active) {
  .meterFill {
    stroke: HighlightText !important;
  }

  .factorProgress {
    background-color: Highlight !important;
  }

  .tag {
    border: 1px solid ButtonText;
  }

  .navBtn {
    border: 1px solid ButtonText;
  }
}
