/* src/styles/videoCall.module.css */

/* --- OVERLAY STYLE --- */
.videoCall {
  /* Changed from relative to fixed for overlay */
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw; /* Full viewport width */
  height: 100vh; /* Full viewport height */
  background-color: rgba(26, 26, 26, 0.9); /* Dark semi-transparent background (was #1a1a1a) */
  z-index: 1000; /* High z-index to appear on top */
  display: flex; /* Use flexbox to center the content */
  align-items: center;
  justify-content: center;
  overflow: hidden; /* Prevent scrollbars on the overlay itself */
  color: #fff;
  font-family: system-ui, -apple-system, sans-serif;
  /* Optional: Add transitions for smooth appearance */
  opacity: 1;
  visibility: visible;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}

/* Container for the actual call content within the overlay */
.videoContainer {
  /* Define the size of the call area within the overlay */
  width: 90%; /* Example: Use 90% of viewport */
  height: 90%; /* Example: Use 90% of viewport */
  max-width: 1400px; /* Optional: Max width */
  max-height: 900px; /* Optional: Max height */

  position: relative; /* Children are positioned relative to this */
  background-color: #1a1a1a; /* Keep the dark background for the call area */
  border-radius: 8px;
  overflow: hidden; /* Crucial to keep content like controls inside */
  display: flex; /* Was already flex, keep if needed for internal layout */
  align-items: center;
  justify-content: center;
}

/* Remote Video Styles */
.remoteVideoWrapper {
  width: 100%;
  height: 100%;
  position: relative; /* Positioned within videoContainer */
  overflow: hidden;
  background-color: #222; /* Background shown before video loads */
}

.remoteVideo {
  display: block; /* Ensure no extra space */
  width: 100%;
  height: 100%;
  object-fit: cover; /* Cover the area, might crop */
  background-color: #222; /* Fallback */
}

/* Video Placeholders */
.videoPlaceholder {
  position: absolute;
  top: 0;
  left: 0;
  /* Background color removed, rely on drawPlaceholderVideo canvas */
}

.remoteVideoPlaceholder {
  width: 100%;
  height: 100%;
  z-index: 5; /* Above video, below indicators */
}

/* Connection Quality Indicator */
.connectionQualityIndicator {
  position: absolute;
  top: 20px;
  right: 20px;
  display: flex;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 5px 10px;
  border-radius: 12px;
  z-index: 25; /* High z-index */
  backdrop-filter: blur(3px);
}

.qualityCanvas {
  margin-right: 8px;
}

.qualityText {
  font-size: 12px;
  font-weight: 500;
  text-transform: capitalize;
}

/* Audio Level Indicators */
.remoteAudioIndicator {
  position: absolute;
  bottom: 20px;
  right: 20px;
  z-index: 15;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 5px;
  border-radius: 8px;
  backdrop-filter: blur(3px);
}

.localAudioIndicator {
  position: absolute;
  bottom: 5px;
  right: 5px;
  z-index: 15; /* Should be relative to localVideoWrapper */
  background-color: rgba(0, 0, 0, 0.6);
  padding: 3px;
  border-radius: 5px;
  backdrop-filter: blur(3px);
}

.audioLevelCanvas {
  display: block;
}

/* Indicator Styles for Video/Audio State */
.connectingIndicator,
.waitingIndicator,
.errorIndicator {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.75);
  z-index: 20; /* Below controls/quality, above video */
  backdrop-filter: blur(4px);
  text-align: center;
  padding: 20px;
}

.connectingIndicator,
.waitingIndicator {
  gap: 15px;
  color: #fff;
  font-size: 1.1em;
}

.waitingSubtext {
  font-size: 0.9em;
  opacity: 0.7;
  margin-top: -5px;
}

.spin {
  animation: spin 1.2s infinite linear;
  font-size: 3em;
  color: #4a90e2;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.retryCount {
  font-size: 0.9em;
  opacity: 0.8;
}

.errorIndicator {
  pointer-events: auto; /* Allow clicking buttons inside */
}

.errorMessage {
  background-color: rgba(220, 53, 69, 0.9);
  padding: 20px 25px;
  border-radius: 8px;
  max-width: 85%;
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: 15px;
  font-size: 0.95em;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
}

.errorIcon {
  font-size: 2em;
  color: #ffcc00;
  margin-bottom: 10px;
}

.retryButton,
.errorEndCallButton {
  background-color: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 5px;
  color: #fff;
  padding: 10px 15px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  margin: 10px auto 0 auto; /* Added top margin */
  transition: background-color 0.2s, transform 0.2s;
  font-size: 0.9em;
  font-weight: 500;
}

.retryButton:hover {
  background-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
}

.errorEndCallButton {
  background-color: rgba(150, 40, 50, 0.9);
}

.errorEndCallButton:hover {
  background-color: rgba(180, 45, 55, 1);
  transform: translateY(-2px);
}

.audioOffIndicator {
  position: absolute;
  top: 20px;
  /* Adjust positioning relative to quality indicator if needed */
  right: 130px; /* Example: move left of quality */
  background-color: rgba(0, 0, 0, 0.6);
  color: #dc3545;
  padding: 8px;
  border-radius: 50%;
  z-index: 10;
  font-size: 1.2em;
  backdrop-filter: blur(3px);
}

/* Local Video */
.localVideoWrapper {
  position: absolute;
  width: clamp(120px, 15%, 200px); /* Adjusted max size slightly */
  aspect-ratio: 4/3;
  bottom: 90px; /* Raise above controls */
  left: 20px;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid rgba(255, 255, 255, 0.5);
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
  z-index: 10; /* Above remote video */
  transition: transform 0.3s ease;
}

.localVideoWrapper:hover {
  transform: scale(1.05);
}

.localVideo {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  background-color: #333;
  transform: scaleX(-1); /* Mirror local view */
}

.localVideoPlaceholder {
  width: 100%;
  height: 100%;
  z-index: 5; /* Above video element */
}

/* Call Info */
.callInfo {
  position: absolute;
  top: 20px;
  left: 20px;
  display: flex;
  flex-direction: column;
  gap: 5px;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 8px 14px;
  border-radius: 15px;
  font-size: 0.9em;
  font-weight: 500;
  z-index: 20; /* Above video, below quality indicator if overlapping */
  backdrop-filter: blur(3px);
}

.videoStats {
  font-size: 0.75em;
  opacity: 0.8;
}

/* Controls */
.callControls {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 16px;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 12px 20px;
  border-radius: 32px;
  transition: opacity 0.4s ease, transform 0.4s ease;
  z-index: 20; /* Ensure controls are above video */
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
}

.callControls.visible {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
}

.callControls.hidden {
  opacity: 0;
  transform: translateX(-50%) translateY(80px); /* Move down when hidden */
  pointer-events: none;
}

.controlButton {
  width: 52px;
  height: 52px;
  border-radius: 50%;
  border: none;
  background-color: rgba(255, 255, 255, 0.15);
  color: #fff;
  font-size: 1.2em;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative; /* For quality dot */
}

.controlButton:hover {
  background-color: rgba(255, 255, 255, 0.25);
  transform: translateY(-3px);
}

.controlButton.active {
  background-color: #4a90e2; /* Blue for active (like mic/video off) */
}

.controlButton.endCall {
  background-color: #dc3545; /* Red for end call */
}

.controlButton.endCall:hover {
  background-color: #c82333;
}

/* Quality dot inside signal button */
.qualityDot {
  position: absolute;
  bottom: 5px; /* Adjusted position slightly */
  right: 5px; /* Adjusted position slightly */
  width: 10px; /* Slightly larger */
  height: 10px;
  border-radius: 50%;
  border: 1px solid rgba(0, 0, 0, 0.5); /* Add border for contrast */
}

/* Color logic for quality dot */
.qualityDot.excellent { background-color: #4caf50; }
.qualityDot.good { background-color: #8bc34a; }
.qualityDot.fair { background-color: #ffc107; }
.qualityDot.poor { background-color: #f44336; }
.qualityDot.unknown { background-color: #aaa; } /* Default/unknown */

/* Connection Quality Text Colors */
.qualityText.excellent { color: #4caf50; }
.qualityText.good { color: #8bc34a; }
.qualityText.fair { color: #ffc107; }
.qualityText.poor { color: #f44336; }
.qualityText.unknown { color: #aaa; }

/* Call Duration */
.callDuration {
  font-weight: 600;
  letter-spacing: 0.5px;
}
